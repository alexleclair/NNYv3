package{	import SocketManager;	import dataTypes.*	import flash.utils.ByteArray;	import DownloadManager;	public class WorldClient extends SocketManager	{				private var dlManager:DownloadManager;				/*		 *	@params		host:String, port:int		 *	@desc		connects to ge fiven host and port.		 *	@returns	void		 */		public function WorldClient(host:String, port:int) // constructor		{			trace("WorldCLient.as: Connecting to "+host+":"+port);			dlManager=new DownloadManager();			super(host, port);		}				override protected function onSocketConnect():void		{			//preparePacket(247, "Now connected to you, take good care of me!");						sendPackets();		}				/*		 *	@params		packet:ByteArray		 *	@desc		Handles the unknown amount of packets(from the Capsule).		 *	@returns	void		 */		override protected function handlePackets(packet:ByteArray)		{			while(packet.bytesAvailable > 0)			{				var cmdID:int = packet.readShort(); 				trace('CMDID: '+cmdID);				switch(cmdID)				{					case Global.PCKT_W_WELCOME: //Welcome								break;										case 0x0009: //_DEBUG: Show remote debug string on console								 trace("[REMOTE DEBUG] "+packet.readUTFBytes(packet.readUnsignedInt()));					default: return;				}			}			sendPackets();		}				/*******************************************************************/				/*		 *	Private packet handling methods.		 *	Those are called from handlePackets() to handle everything coming from the RS.		 */	}}
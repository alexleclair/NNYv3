/************************************************ *	Project:	NNYv3 / Client *	Date:		13/11/09 * *	Author:		Alexandre Leclair	(Stax) *	Update:		14/11/09 * *	WIP / buggy stuff *	-DownloadManager() *	-ClientInterface() ***********************************************/package{	import flash.display.Sprite;	import flash.filesystem.FileMode;	import flash.filesystem.FileStream;	import flash.filesystem.File;	import flash.display.MovieClip;	public class ClientInterface extends Sprite	{		//Member variables		private var m_updateServer:Array = new Array('realm1.nnyv3.zloche.net:6131','realm1.nnyv3.zloche.net:6131');		private var m_realmClient:RealmClient;		private static var m_clientVersion:Number = 3.0;		private static var m_clientRevision=0;		public static var holdingMC:MovieClip; //Will hold the hmcHolder movie clip so that other classes can access it.				public function ClientInterface() //Constructor		{			holdingMC=mcHolder;			trace(authenticate.getResponse('randomStr', '!2?'));			/*--------------------------------*/			//We will first read the revision file, which will be used to identify which version we are using here. Will be sent to the RS			try			{				var revFile:File = File.applicationDirectory.resolvePath("data/clientRevision.dat");				trace(revFile.nativePath);				var fs:FileStream = new FileStream();				fs.open(revFile, FileMode.READ);				m_clientRevision = parseInt(fs.readUTFBytes(fs.bytesAvailable));				fs.close();				if(m_clientRevision==Number.NaN) m_clientRevision=0;			}			catch(e:Error)			{				trace(e);				m_clientRevision=0;			}			/*--------------------------------*/			m_realmClient=new RealmClient("192.168.2.23", 6131);		}				public static function updateClientRevision(revision:uint)		{			var file:File = File.applicationDirectory.resolvePath("data/clientRevision.dat");			var stream:FileStream = new FileStream();			stream.open( file, FileMode.WRITE);			stream.writeUnsignedInt(revision);			stream.close();			m_clientRevision=revision;		}				//Managing read-only variables		public static function get clientVersion()		{			return m_clientVersion;		}		public static function get clientRevision()		{			return m_clientRevision;		}		public static function get root()		{			return holdingMC;		}	}}